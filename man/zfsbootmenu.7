.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "zfsbootmenu 7"
.TH zfsbootmenu 7 "2020-12-08" "1.7.1" "ZFSBootMenu"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
zfsbootmenu \- System integration
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
ZFSBootMenu behavior is controlled through \s-1ZFS\s0 filesystem properties and command-line options provided to the ZFSBootMenu kernel.
.SH "Command-Line Parameters"
.IX Header "Command-Line Parameters"
These options are set on the kernel command line when booting the initramfs or \s-1UEFI\s0 bundle. Default options were chosen to allow general systems to boot without setting any values.
.IP "\fBspl_hostid=<hostid>\fR" 4
.IX Item "spl_hostid=<hostid>"
When creating an initramfs or \s-1UEFI\s0 bundle, the \fIhostid\fR from the system is copied into the target. If this image will be used on another system with a different \fIhostid\fR, it can be overridden with this option.
.Sp
Replace \fB<hostid>\fR with an eight-digit hexadecimal number.
.IP "\fBforce_import=1\fR" 4
.IX Item "force_import=1"
Set this option to attempt to force pool imports. When set, this invokes \fIzpool import \-f\fR in place of the regular \fIzpool import\fR command, which will attempt to import a pool that's potentially in use on another system. Use this option with caution!
.Sp
Omit this option or explicitly specify \fBforce_import=0\fR to disable forced imports.
.IP "\fBtimeout\fR" 4
.IX Item "timeout"
This option accepts numeric values that control whether and when the
boot-environment menu should be displayed.
.RS 4
.IP "\fBtimeout=0\fR" 2
.IX Item "timeout=0"
When possible, bypass the menu and immediately boot a configured \fIbootfs\fR pool property.
.IP "\fBtimeout=\-1\fR" 2
.IX Item "timeout=-1"
Rather than present a countdown timer for automatic selection, immediately display the boot-environment menu.
.IP "\fBtimeout=<positive integer>\fR" 2
.IX Item "timeout=<positive integer>"
Display a countdown timer for the specified number of seconds before booting the configured \fIbootfs\fR boot environment.
.RE
.RS 4
.RE
.IP "\fBroot=zfsbootmenu:POOL=<pool>\fR" 4
.IX Item "root=zfsbootmenu:POOL=<pool>"
By default, ZFSBootMenu will look for the \fIbootfs\fR property on the first pool it imports to select the default boot environment. If you have multiple pools, substitute the name of your preferred pool for \fB<pool>\fR in the argument \fBroot=zfsbootmenu:POOL=<pool>\fR.
.SH "ZFS Properties"
.IX Header "ZFS Properties"
The following properties can be set at any level of the boot-environment hierarchy to control boot behavior.
.IP "\fBorg.zfsbootmenu:kernel\fR" 4
.IX Item "org.zfsbootmenu:kernel"
An identifier used to select which kernel to boot among all kernels found in the \fI/boot\fR directory of the selected boot environment. This can be a partial kernel name (e.g., \fI5.4\fR) or a full filename (e.g., \fIvmlinuz\-5.7.11_1\fR).
.Sp
If the identifier does not match any kernels, the latest kernel will be chosen as a fallback.
.IP "\fBorg.zfsbootmenu:commandline\fR" 4
.IX Item "org.zfsbootmenu:commandline"
A list of command-line arguments passed to the kernel selected by ZFSBootMenu for final boot.
.Sp
Do not set \fIroot=\fR; ZFSBootMenu will set this option for for you.
.IP "\fBorg.zfsbootmenu:active\fR" 4
.IX Item "org.zfsbootmenu:active"
This controls whether boot environments appear in or are hidden from ZFSBootMenu.
.RS 4
.IP "\fBoff\fR" 2
.IX Item "off"
For boot environments with \fImountpoint=/\fR, set \fBorg.zfsbootmenu:active=off\fR to \fB\s-1HIDE\s0\fR the environment.
.IP "\fBon\fR" 2
.IX Item "on"
For boot environments with \fImountpoint=legacy\fR, set \fBorg.zfsbootmenu:active=on\fR to \fB\s-1SHOW\s0\fR the environment.
.RE
.RS 4
.Sp
By default, ZFSBootMenu only shows boot environments with the property \fImountpoint=/\fR.
.RE
.IP "\fBorg.zfsbootmenu:rootprefix\fR" 4
.IX Item "org.zfsbootmenu:rootprefix"
This specifies the prefix added to the \s-1ZFS\s0 filesystem provided as the root filesystem on the kernel command line. For example, the command-line argument \fIroot=zfs:zroot/ROOT/void\fR has root prefix \fIroot=zfs:\fR.
.Sp
The default prefix is \fIroot=zfs:\fR on all systems except those that appear to be Arch Linux. For Arch, the default root prefix is \fIzfs=\fR.
.Sp
Set this property to override the value determined from inspecting the boot environment.
.SH "Dracut Options"
.IX Header "Dracut Options"
In addition to standard dracut configuration options, the ZFSBootMenu dracut module supports an addtional option to customize boot behavior.
.IP "\fBzfsbootmenu_teardown=<executable>\fR" 4
.IX Item "zfsbootmenu_teardown=<executable>"
An optional variable specifying the path to a teardown script that will be installed in the ZFSBootMenu initramfs. If this key is set but no file exists at the path \fB<executable>\fR or the file is not executable, a warning will be issued but initramfs creation will proceed.
.Sp
Some hardware initialized by the kernel used to boot ZFSBootMenu may not be properly reinitialized when a boot environment is launched. A teardown executable, if provided, will be inovked by ZFSBootMenu immediately before \fBkexec\fR is invoked to jump into the selected kernel. This script can be used, for example, to unbind drivers from hardware or remove kernel modules.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBgenerate-zbm\fR(5) \fBgenerate-zbm\fR(8) \fBdracut.conf\fR(5)
.SH "AUTHOR"
.IX Header "AUTHOR"
ZFSBootMenu Team <https://github.com/zbm\-dev/zfsbootmenu>
